// --- Day 20: Trench Map ---
// https://adventofcode.com/2021/day/20

import 'dart:io';

import 'package:advent_of_code_2021/day20.dart';
import 'package:test/test.dart';

final List<String> input = File('test/data/day20.txt').readAsLinesSync();

void main() {
  group('Part One', () {
    test('Example 1', () {
      expect(
        solveA(const <String>[

          '',
          '#..#.',
          '#....',
          '##..#',
          '..#..',
          '..###',
        ]),
        equals(35),
      );
    });

    test('Solution', () {
      expect(solveA(input), equals(5479));
    });
  });

  group('Part Two', () {
    test('Example 1', () {
      expect(
        solveB(const <String>[

          '',
          '#..#.',
          '#....',
          '##..#',
          '..#..',
          '..###',
        ]),
        equals(3351),
      );
    });

    test('Solution', () {
      expect(solveB(input), equals(19012));
    });
  });
}
